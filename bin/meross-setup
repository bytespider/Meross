#!/usr/bin/env node

'use strict'

const {version} = require('../package.json')
const program = require('commander')
const util = require('util')

const API = require('../lib/api')

const collection = (value, store = []) => {
    store.push(value)
    return store
}

program
  .version(version)
  .arguments('[options]')
  .option('-g, --gateway <gateway>', 'Set the gateway address', '10.10.10.1')
  .option('--wifi-ssid <wifi-ssid>', 'WIFI AP name')
  .option('--wifi-pass <wifi-pass>', 'WIFI AP password')
  .option('--mqtt <mqtt-server>', 'MQTT server address', collection)
  .option('--key <shared-key>', 'Shared key for generating signatures', '')
  .option('--user <user-id>', '', '')
  .option('-v, --verbose', 'Show debugging messages', '')

program.parse(process.argv)


if (!program.gateway) {
    console.error('Gateway must be specified')
    process.exit(1)
}

if (!program.wifiSsid) {
    console.error('WIFI ssid must be specified')
    process.exit(1)
}

if (!program.wifiPass) {
    console.error('WIFI password must be specified')
    process.exit(1)
}

(async () => {
    const gateway = program.gateway
    const key = program.key
    const userId = program.user
    const verbose = program.verbose

    const api = new API(gateway, key, userId, verbose)

    console.log(`Setting up device with IP ${gateway}`)
    if (program.mqtt && program.mqtt.length) {
        await api.configureMqttServers(program.mqtt)
    }

    await api.configureWifiCredentials({
        ssid: program.wifiSsid,
        password: program.wifiPass,
    })
    console.log(`Rebooting device`)
})()
