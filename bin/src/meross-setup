#!/usr/bin/env node

'use strict'

const program = require('commander')
const util = require('util')

const API = require('./api')

const collection = (value, store = []) => {
    store.push(value)
    return store
}

program
  .version('1.0.3')
  .arguments('[options]')
  .option('-g, --gateway <gateway>', 'Set the gateway address')
  .option('--wifi-ssid <wifi-ssid>', 'WIFI AP name')
  .option('--wifi-pass <wifi-pass>', 'WIFI AP password')
  .option('--mqtt <mqtt-server>', 'MQTT server address', collection)
  .option('--key <shared-key>', 'Shared key for generating signatures', '')
  .option('--user <user-id>', '', '')

program.parse(process.argv);


if (!program.gateway) {
    console.error('Gateway must be specified');
    process.exit(1);
}

if (!program.wifiSsid) {
    console.error('WIFI ssid must be specified');
    process.exit(1);
}

if (!program.wifiPass) {
    console.error('WIFI password must be specified');
    process.exit(1);
}

(async () => {
    const gateway = program.gateway
    const key = program.key
    const userId = program.user
    console.log(`Setting up device with IP ${gateway}`)


    const api = new API(gateway, key, userId)
    var response;

    if (program.mqtt && program.mqtt.length) {
        response = await api.configureMqttServers(program.mqtt)
    }

    response = await api.configureWifiCredentials({
        ssid: program.wifiSsid,
        password: program.wifiPass,
    })
    console.log('Got response:', util.inspect(response, {showHidden: false, depth: null}))
})()
